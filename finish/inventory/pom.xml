<?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.openliberty.guides</groupId>
        <artifactId>mp-opentracing</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>inventory-service</artifactId>
    <packaging>war</packaging>

    <properties>
        <!-- Plugins -->
        <version.exec-maven-plugin>1.6.0</version.exec-maven-plugin>
        <version.maven-surefire-plugin>2.18.1</version.maven-surefire-plugin>
        <version.maven-failsafe-plugin>2.18.1</version.maven-failsafe-plugin>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-client</artifactId>
            <version>3.1.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-extension-providers</artifactId>
            <version>3.1.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>1.0.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ibm.websphere.appserver.api</groupId>
            <artifactId>com.ibm.websphere.appserver.api.jaxrs20</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.json</groupId>
            <artifactId>javax.json-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.opentracing</groupId>
            <artifactId>opentracing-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.opentracing</groupId>
            <artifactId>microprofile-opentracing-api</artifactId>
        </dependency>
    </dependencies>

    <profiles>
        <!-- Start system service before running tests -->
        <profile>
            <id>setup-test</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>${version.exec-maven-plugin}</version>
                        <executions>
                            <execution>
                                <id>test-start-system-service</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>pre-integration-test</phase>
                                <configuration>
                                    <workingDirectory>../system</workingDirectory>
                                    <executable>mvn${mvn.extension}</executable>
                                    <arguments>
                                        <argument>liberty:start-server</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- Stop system service after running tests -->
        <profile>
            <id>teardown-test</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>${version.exec-maven-plugin}</version>
                        <executions>
                            <execution>
                                <id>test-stop-system-service</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>post-integration-test</phase>
                                <configuration>
                                    <workingDirectory>../system</workingDirectory>
                                    <executable>mvn${mvn.extension}</executable>
                                    <arguments>
                                        <argument>liberty:stop-server</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
            </plugin>

            <!-- Liberty plugin -->
            <plugin>
                <groupId>net.wasdev.wlp.maven.plugins</groupId>
                <artifactId>liberty-maven-plugin</artifactId>
                <version>${version.liberty-maven-plugin}</version>
                <configuration>
                    <!-- Temporarilty build from downloaded runtime until its 18.0.0.1 is realeased -->
                    <install>
                        <runtimeUrl>https://public.dhe.ibm.com/ibmdl/export/pub/software/openliberty/runtime/nightly/2018-02-11_-0226/openliberty-all-18.0.0.1-20180211-0217.zip</runtimeUrl>
                    </install>
<!--                     <assemblyArtifact>
                        <groupId>io.openliberty</groupId>
                        <artifactId>openliberty-runtime</artifactId>
                        <version>${version.openliberty-runtime}</version>
                        <type>zip</type>
                    </assemblyArtifact> -->
                    <configFile>src/main/liberty/config/server.xml</configFile>
                    <include>usr</include>
                    <bootstrapProperties>
                        <default.http.port>${inv.service.http.port}</default.http.port>
                        <default.https.port>${inv.service.https.port}</default.https.port>
                    </bootstrapProperties>
                </configuration>
                <executions>
                    <execution>
                        <id>install-liberty</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>install-server</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>create-default-server</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>create-server</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>install-app</id>
                        <phase>package</phase>
                        <goals>
                            <goal>install-apps</goal>
                        </goals>
                        <configuration>
                            <appsDirectory>apps</appsDirectory>
                            <stripVersion>true</stripVersion>
                            <installAppPackages>project</installAppPackages>
                        </configuration>
                    </execution>
                    <execution>
                        <id>start-server</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>test-start-server</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-server</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>test-stop-server</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- For downloading files -->
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <version>${version.download-maven-plugin}</version>
                <executions>
                    <execution>
                        <id>install-tracer</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://repo1.maven.org/maven2/net/wasdev/wlp/tracer/liberty-opentracing-zipkintracer/1.0/liberty-opentracing-zipkintracer-1.0-sample.zip</url>
                            <unpack>true</unpack>
                            <outputDirectory>${project.build.directory}/liberty/wlp/usr</outputDirectory>
                            <!-- <md5>/md5> -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Plugin to run unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.maven-surefire-plugin}</version>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <id>default-test</id>
                        <configuration>
                            <excludes>
                                <exclude>**/it/**</exclude>
                            </excludes>
                            <reportsDirectory>${project.build.directory}/test-reports/unit</reportsDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Plugin to run functional tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${version.maven-failsafe-plugin}</version>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/it/**</include>
                            </includes>
                            <systemPropertyVariables>
                                <sys.http.port>${sys.service.http.port}</sys.http.port>
                                <inv.http.port>${inv.service.http.port}</inv.http.port>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                    <execution>
                        <id>verify-results</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <summaryFile>${project.build.directory}/test-reports/it/failsafe-summary.xml</summaryFile>
                    <reportsDirectory>${project.build.directory}/test-reports/it</reportsDirectory>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
